const VkBot = require('node-vk-bot-api'); // –û—Å–Ω–æ–≤–∞
const api = require('node-vk-bot-api/lib/api'); // –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –≤ –í–ö
const moment = require('moment'); // –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞—Ç—ã
const token = process.env.TOKEN // –¢–æ–∫–µ–Ω –≥—Ä—É–ø–ø—ã
const bot = new VkBot(token); // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ –≤–∫
const mongoose = require("mongoose"); // –ú–æ–¥—É–ª—å mongoose
const Schema = mongoose.Schema; // –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ö–µ–º—ã
// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ mongoose
mongoose.connect(process.env.URL, { useNewUrlParser: true, useUnifiedTopology: true, useFindAndModify: false });

// —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ö–µ–º—ã
// –°—Ö–µ–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const userScheme = new Schema({
    ID: Number, // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    Flag: Number, // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ flag
    Text: String, // –¢–µ–∫—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    Date: String, // –î–∞—Ç–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    Time: String, // –¢–µ–∫—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    Numbers: Number // –ö–æ–ª-–≤–æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
}); 
const User = mongoose.model("users", userScheme); // —Å–∞–º–∞ –∫–æ–ª–ª–µ–∫—Ü–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
// –°—Ö–µ–º–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
const reminderScheme = new Schema({
    ID: Number, // ID –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    UserID: Number, // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—è
    Text: String, // –¢–µ–∫—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    Date: String, // –î–∞—Ç–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    Time: String, // –¢–µ–∫—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    Repeat: Number, // –ü–æ–≤—Ç–æ—Ä—è—Ç—å –ª–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
});
const Reminder = mongoose.model("reminders", reminderScheme); // –∫–æ–ª–ª–µ–∫—Ü–∏—è —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏

// ============[–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]===================
async function RegisterUser(userID)
{
    await User.create({ID: userID,
    Flag: 0,
    Text: 'None',
    Date: 'None',
    Time: 'None',
    Numbers: 0})
}
// ============[–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è]===================
async function RegisterReminder(iID, iUserID, sText, sDate, sTime, iRepeat)
{
    await Reminder.create({ID: iID,
        UserID: iUserID,
        Text: sText,
        Date: sDate,
        Time: sTime,
        Repeat: iRepeat})
}
// ============[–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞: –ù–∞—á–∞—Ç—å, Lower=True]===================
bot.command('–Ω–∞—á–∞—Ç—å', async (ctx) => {
    if (ctx.message.from_id == ctx.message.peer_id) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–≤–æ–¥–∞ –ª–∏—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É
    {
        if (!await User.findOne({ID: ctx.message.from_id}).exec()) // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        {
            const data = await api('users.get', {user_ids: ctx.message.from_id,access_token: token}); // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —á–µ—Ä–µ–∑ –º–æ–¥—É–ª—å
            await ctx.reply(`ü§ñ [id${ctx.message.from_id}|${data.response[0].first_name}], –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å!\n\
                                –ú–µ–Ω—è –∑–æ–≤—É—Ç, –ê–Ω–∞–Ω–∞—Å—ã—á\n\
                                –Ø –ø–æ–º–æ–≥–∞—é –ª—é–¥—è–º, –æ —á–µ–º-–ª–∏–±–æ –Ω–∞–ø–æ–º–Ω–∏—Ç—å\n\
                                –ü–∏—à–∏ –∫–æ–º–∞–Ω–¥—ã! –ù–∞–¥–µ—é—Å—å —Å—Ä–∞–±–æ—Ç–∞–µ–º—Å—è)`); // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await RegisterUser(ctx.message.from_id); // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        } 
        else await ctx.reply('ü§ñ –•–º–º.. —Ç—ã –≤—Ä–æ–¥–µ —É –º–µ–Ω—è –∑–∞–ø–∏—Å–∞–Ω. –†–∞–∑–≤–µ –Ω–µ—Ç?') // –ï—Å–ª–∏ –∑–∞—Ä–µ–≥–∞–Ω
    }
});
// ============[–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞: –ö–æ–º–∞–Ω–¥—ã, Lower=True]===================
bot.command('–∫–æ–º–∞–Ω–¥—ã', async (ctx) => {
    await ctx.reply('ü§ñ –ó–∞–ø–æ–º–∏–Ω–∞–π –¥–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\
    1Ô∏è‚É£ –ù–∞–ø–æ–º–Ω–∏—Ç—å - –°–æ–∑–¥–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ\n\
    2Ô∏è‚É£ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è - –°–ø–∏—Å–æ–∫ –º–æ–∏—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π\n\
    3Ô∏è‚É£ –£–¥–∞–ª–∏—Ç—å <–Ω–æ–º–µ—Ä> - –£–¥–∞–ª–∏—Ç—å —Å–≤–æ—ë –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ\n\
    4Ô∏è‚É£ –û—Ç–º–µ–Ω–∞ - –æ—Ç–º–µ–Ω–∏—Ç—å –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è');
});
// ============[–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞: –ù–∞–ø–æ–º–Ω–∏—Ç—å, Lower=True]===================
bot.command('–Ω–∞–ø–æ–º–Ω–∏—Ç—å', async (ctx) => {
    if (ctx.message.from_id == ctx.message.peer_id) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–≤–æ–¥–∞ –ª–∏—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É
    {
        if (!await User.findOne({ID: ctx.message.from_id}).exec()) // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            await RegisterUser(ctx.message.from_id); // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        await ctx.reply('ü§ñ –ù—É —Ö–æ—Ä–æ—à–æ, –Ω–∞–ø–∏—à–∏ –º–Ω–µ\n–û —á–µ–º —Ç–µ–±–µ –Ω—É–∂–Ω–æ –Ω–∞–ø–æ–º–Ω–∏—Ç—å?') 
        await User.findOneAndUpdate({ID: ctx.message.from_id},{ Flag: 1 }).exec(); // –ü–æ–∏—Å–∫ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑–µ —Ñ–ª–∞–≥–∞ –Ω–∞ 1
    }
});
// ============[–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞: –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è, Lower=True]===================
bot.command('–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è', async (ctx) => {
    if (ctx.message.from_id == ctx.message.peer_id) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–≤–æ–¥–∞ –ª–∏—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É
    {
        if (!await User.findOne({ID: ctx.message.from_id}).exec()) // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            await RegisterUser(ctx.message.from_id); // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        let stringMessage = ''; // –¢–µ–∫—Å—Ç –¥–ª—è –≤–≤—ã–≤–æ–¥ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
        let countFind = 0;
        let stringHour, stringMinute;
        const user = await User.findOne({ID: ctx.message.from_id}).exec(); // –°–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Å—Ç–∞—Ç—ã, –ø–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤—Ç–µ–ª—è
        // –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –∞–π–¥–∏
        for(const reminder of await Reminder.find({UserID: ctx.message.from_id}).exec())
        {
            const splitTime = reminder.Time.split(':'); // –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ :
            if (Number(splitTime[0]) < 10) // –î–ª—è –∫—Ä–∞—Å–æ—Ç—ã: –ï—Å–ª–∏ —á–∞—Å–æ–≤ –º–µ—à–Ω—å—à–µ 10
                stringHour = `0${Number(splitTime[0])}`
            else
                stringHour = `${Number(splitTime[0])}`

            if (Number(splitTime[1]) < 10) // –î–ª—è –∫—Ä–∞—Å–æ—Ç—ã: –ï—Å–ª–∏ –º–∏–Ω—É—Ç –º–µ—à–Ω—å—à–µ 10
                stringMinute = `0${Number(splitTime[1])}`
            else
                stringMinute = `${Number(splitTime[1])}`

            stringMessage+=`#${reminder.ID} | ${reminder.Date} –≤ ${stringHour}:${stringMinute}\n${reminder.Text}`; // –°–∞–º–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
            countFind++; 
        }
        await ctx.reply(`ü§ñ –°–æ–∑–¥–∞–Ω–Ω–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π: ${user.Numbers}\n–ù–∞–π–¥–µ–Ω–Ω–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π: ${countFind}\n\n${stringMessage}`); // –°–æ–æ–±—â–µ–Ω–∏–µ
    }
});
// ============[–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞: –£–¥–∞–ª–∏—Ç—å, Lower=True]===================
bot.command('—É–¥–∞–ª–∏—Ç—å', async (ctx) => {
    if (ctx.message.from_id == ctx.message.peer_id) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–≤–æ–¥–∞ –ª–∏—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É
    {
        if (!await User.findOne({ID: ctx.message.from_id}).exec()) // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            await RegisterUser(ctx.message.from_id); // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
        const args = ctx.message.text.split(/ +/g);
        if(!args[1]) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
            return await ctx.reply('ü§ñ –•–º–º.. —Ç—ã –Ω–µ –≤–≤—ë–ª –Ω–æ–º–µ—Ä –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è..') // —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ 
        const iNumber = Number(args[1]) // –ü–µ—Ä–µ–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏ –≤ —á–∏—Å–ª–æ
        if(await Reminder.findOne({UserID: ctx.message.from_id, ID: iNumber}).exec()) // –ø–æ–∏—Å–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
        {
            await Reminder.deleteOne({ID: ctx.message.from_id, ID: iNumber}).exec() // —É–¥–∞–ª–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
            await ctx.reply(`ü§ñ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ #${iNumber}, –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!`) // —Å–æ–æ–±—â–µ–Ω–∏–µ
        }
        else await ctx.reply('ü§ñ –Ø –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ!') // —Å–æ–æ–±—â–µ–Ω–∏–µ 
    }
});
// ============[–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞: –û—Ç–º–µ–Ω–∞, Lower=True]===================
bot.command('–æ—Ç–º–µ–Ω–∞', async (ctx) => {
    if (ctx.message.from_id == ctx.message.peer_id) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–≤–æ–¥–∞ –ª–∏—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É
    {
        if (!await User.findOne({ID: ctx.message.from_id}).exec()) // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            await RegisterUser(ctx.message.from_id); // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
        const user = await User.findOne({ID: ctx.message.from_id}).exec();
        if (user.Flag > 0) // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ —á—Ç–æ —Ñ–ª–∞–≥ –±–æ–ª—å—à–µ 0
        {
            await User.findOneAndUpdate({ID: ctx.message.from_id},{ Flag: 0, Date: 'None', Time: 'None', Text: 'None' }).exec(); // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞
            await ctx.reply('ü§ñ –•–æ—Ä–æ—à–æ, —Ö–æ—Ä–æ—à–æ, —è –≤—Å–µ –æ—Ç–º–µ–Ω–∏–ª)'); // –°–æ–æ–±—â–µ–Ω–∏–µ
        }
        else await ctx.reply('ü§ñ –•–º... –ê —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å?'); // –°–æ–æ–±—â–µ–Ω–∏–µ
    }
});
// ============[–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π]===================
bot.event('message_new', async (ctx) => {
    if (ctx.message.from_id == ctx.message.peer_id) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–≤–æ–¥–∞ –ª–∏—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É
    {
        if (!await User.findOne({ID: ctx.message.from_id}).exec()) // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            await RegisterUser(ctx.message.from_id); // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = await User.findOne({ID: ctx.message.from_id}).exec(); // –°–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Å—Ç–∞—Ç—ã, –ø–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤—Ç–µ–ª—è
        if (user.Flag == 1) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–ª–∞–≥ = 1
        {
            await ctx.reply(`ü§ñ –¢–∞–∫-—Å, —Ç–µ–∫—Å—Ç —Ç–≤–æ–µ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:\n${ctx.message.text}\n\n\
                                –ö–æ–≥–¥–∞ –Ω–∞–ø–æ–º–Ω–∏—Ç—å –∏ –≤–æ —Å–∫–æ–ª—å–∫–æ?\n\
                                –§–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏: –¥–µ–Ω—å.–º–µ—Å—è—Ü.–≥–æ–¥ —á–∞—Å:–º–∏–Ω—É—Ç—ã\n\
                                –ü—Ä–∏–º–µ—Ä: 31.12.2020 22:59\n\
                                —Å–µ–≥–æ–¥–Ω—è 12(–∑–∞–ø–∏—à–µ—Ç—å—Å—è –≤ 12:00)`) 
            await User.findOneAndUpdate({ID: ctx.message.from_id},{ Flag: 2, Text: ctx.message.text }).exec(); // –ü–æ–∏—Å–∫ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∑–∞–º–µ–Ω–∞ —Ç–µ–∫—Å—Ç–∞ –∏ —Ñ–ª–∞–≥–∞
        }
        else if (user.Flag == 2) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–ª–∞–≥ = 2
        {
            var date = new Date().toLocaleString("en-US", {timeZone: "Europe/Moscow"}); // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞—Ç—ã
            date = new Date(date); // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞—Ç—ã
            let day, month, year, hour, minute, textDate, textTime
            const args = ctx.message.text.split(/ +/g); // –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ split

            const iHour = moment().zone("+03:00"); // –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞: –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è —á–∞—Å–∞
            const iMinute = date.getMinutes(); // –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞: –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è –º–∏–Ω—É—Ç
            const iMonth = date.getMonth() + 1; // –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞: –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –º–µ—Å—è—Ü–∞
            const iDay = date.getDate(); // –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞: –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è 
            const iYear = date.getFullYear(); // –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞: –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –≥–æ–¥–∞

            if (args[0].toLowerCase() == '—Å–µ–≥–æ–¥–Ω—è' || args[0].toLowerCase() == '—Å–µ–¥–Ω—è') // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–≤–æ–¥–∞ —á–µ—Ä–µ–∑ —á–µ—Ä–µ–∑ lower
            {
                year = date.getFullYear(); // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –≥–æ–¥–∞
                month = date.getMonth() + 1; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –º–µ—Å—è—Ü–∞, + 1 —Ç.–∫ –≤—ã–≤–æ–¥ –º–µ—Å –≤ js –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0
                day = date.getDate(); // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è
            }
            else if (args[0].toLowerCase() == '–∑–∞–≤—Ç—Ä–∞' || args[0].toLowerCase() == '–∑—Ç') // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–≤–æ–¥–∞ —á–µ—Ä–µ–∑ —á–µ—Ä–µ–∑ lower
            {
                year = date.getFullYear(); // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –≥–æ–¥–∞
                month = date.getMonth() + 1; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –º–µ—Å—è—Ü–∞, + 1 —Ç.–∫ –≤—ã–≤–æ–¥ –º–µ—Å –≤ js –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0
                day = date.getDate() + 1; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–≥–æ –¥–Ω—è
                if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–µ—Å—è—Ü—ã
                {
                    if (day > 31) // –ë–æ–ª—å—à–µ –ª–∏ 31 –¥–Ω—è?
                    {
                        // –µ—Å–ª–∏ –¥–∞ —Ç–æ:
                        day = 1; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è –º–µ—Å—è—Ü–∞
                        month++; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞
                        if (month > 12) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–µ—Å—è—Ü–∞
                        {
                            month = 1; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞ = —è–Ω–≤–∞—Ä—è
                            year++; // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫ –≥–æ–¥—É + 1
                        }
                    }
                }
                else if (month == 4 || month == 6 || month == 9 || month == 11) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–µ—Å—è—Ü—ã
                {
                    if (day > 30) // –ë–æ–ª—å—à–µ –ª–∏ 30 –¥–Ω—è?
                    {
                        // –µ—Å–ª–∏ –¥–∞ —Ç–æ:
                        day = 1; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è –º–µ—Å—è—Ü–∞
                        month++; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞
                        if (month > 12) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–µ—Å—è—Ü–∞
                        {
                            month = 1; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞ = —è–Ω–≤–∞—Ä—è
                            year++; // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫ –≥–æ–¥—É + 1
                        }
                    }
                }
                else
                {
                    if(year % 4 == 0 && ( year % 100 != 0 || year % 400 == 0 )) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∏—Å–æ–∫–æ—Å–Ω—ã–π –≥–æ–¥
                    {
                        if (day > 29) // –ü—Ä–æ–≤–µ—Ä–∫–∞: –ë–æ–ª—å—à–µ –ª–∏ 29 –¥–Ω–µ–π, –µ—Å–ª–∏ –¥–∞, —Ç–æ:
                        {
                            day = 1; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è –º–µ—Å—è—Ü–∞
                            month++; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞
                        }
                    }
                    else // –ï—Å–ª–∏ –Ω–µ –≤–∏—Å–æ–∫–æ—Å–Ω—ã–π –≥–æ–¥
                    {
                        if (day > 28) // –ü—Ä–æ–≤–µ—Ä–∫–∞: –ë–æ–ª—å—à–µ –ª–∏ 28 –¥–Ω–µ–π, –µ—Å–ª–∏ –¥–∞, —Ç–æ:
                        {
                            day = 1; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è –º–µ—Å—è—Ü–∞
                            month++; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞
                        }
                    }
                }
            }
            else // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–≤–æ–¥ –¥–∞—Ç—ã –≤ —Ä—É—á–Ω—É—é
            {
                const splitDate = args[0].split('.');
                if (!splitDate[1]) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
                    return await ctx.reply('ü§ñ –£–ø—Å.. –≤–∏–¥–∏–º–æ —Ç—ã –Ω–µ —Ç–∞–∫ –≤–≤—ë–ª –º–µ—Å—è—Ü, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!') // –û—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏

                if (!splitDate[2]) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
                    return await ctx.reply('ü§ñ –£–ø—Å.. –≤–∏–¥–∏–º–æ —Ç—ã –Ω–µ —Ç–∞–∫ –≤–≤—ë–ª –≥–æ–¥, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!') // –û—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏

                if(Number(splitDate[0]) < 1 || Number(splitDate[0]) > 31)
                    return await ctx.reply('ü§ñ –£–ø—Å.. –≤–∏–¥–∏–º–æ —Ç—ã –Ω–µ —Ç–∞–∫ –≤–≤—ë–ª –¥–µ–Ω—å, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!') // –û—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏

                if(Number(splitDate[1]) < 1 || Number(splitDate[1]) > 12)
                    return await ctx.reply('ü§ñ –£–ø—Å.. –≤–∏–¥–∏–º–æ —Ç—ã –Ω–µ —Ç–∞–∫ –≤–≤—ë–ª –º–µ—Å—è—Ü, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!') // –û—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏

                if(Number(splitDate[2]) < iYear || Number(splitDate[2]) > iYear + 2)
                    return await ctx.reply('ü§ñ –£–ø—Å.. –≤–∏–¥–∏–º–æ —Ç—ã –Ω–µ —Ç–∞–∫ –≤–≤—ë–ª –¥–µ–Ω—å, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!') // –û—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏

                // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–≤–æ–¥ –¥–∞—Ç—ã
                if((Number(splitDate[1]) == 1 || Number(splitDate[1]) == 3 || Number(splitDate[1]) == 5 || Number(splitDate[1]) == 7 || Number(splitDate[1]) == 8 || Number(splitDate[1]) == 10 || Number(splitDate[1]) == 12) && (Number(splitDate[0]) > 31 || Number(splitDate[0]) < 1))
                    return await ctx.reply('ü§ñ –•–º.. —É —Ç–µ–±—è —Ç—É—Ç –æ—à–∏–±–∫–∞:\n\
                                            –ù–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ —Ç–∞–∫–æ–º –º–µ—Å—è—Ü–µ –±–æ–ª—å—à–µ 31 –∏–ª–∏ –º–µ–Ω—å—à–µ 1 –¥–Ω—è') // –û—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏   

                if(((Number(splitDate[1]) == 4 || Number(splitDate[1]) == 6 || Number(splitDate[1]) == 9 || Number(splitDate[1]) == 11)) && (Number(splitDate[0]) > 30 || Number(splitDate[0]) < 1))
                    return await ctx.reply('ü§ñ –•–º.. —É —Ç–µ–±—è —Ç—É—Ç –æ—à–∏–±–∫–∞:\n\
                                            –ù–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ —Ç–∞–∫–æ–º –º–µ—Å—è—Ü–µ –±–æ–ª—å—à–µ 30 –∏–ª–∏ –º–µ–Ω—å—à–µ 1 –¥–Ω—è') // –û—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ 

                // –ü—Ä–æ–≤–µ—Ä–∫–∞: –ø—Ä–æ—à–ª–æ–µ
                if (iYear > Number(splitDate[2])) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–µ–¥—à–µ–µ –≤—Ä–µ–º—è
                    return await ctx.reply('ü§ñ –•–º.. —É —Ç–µ–±—è —Ç—É—Ç –æ—à–∏–±–∫–∞:\n\
                                 –Ø –Ω–µ –º–æ–≥—É —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –ø—Ä–æ—à–ª–æ–º, –≥–æ–¥ –≤–≤–µ–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ') // –û—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ 
                else if(iYear == Number(splitDate[2]) && iMonth > Number(splitDate[1])) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–µ–¥—à–µ–µ –≤—Ä–µ–º—è
                    return await ctx.reply('ü§ñ –•–º.. —É —Ç–µ–±—è —Ç—É—Ç –æ—à–∏–±–∫–∞:\n\
                                 –Ø –Ω–µ –º–æ–≥—É —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –ø—Ä–æ—à–ª–æ–º, –º–µ—Å—è—Ü –≤–≤–µ–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ') // –û—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ 
                else if(iYear == Number(splitDate[2]) && iMonth == Number(splitDate[1]) && iDay > Number(splitDate[1])) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–µ–¥—à–µ–µ –≤—Ä–µ–º—è
                    return await ctx.reply('ü§ñ –•–º.. —É —Ç–µ–±—è —Ç—É—Ç –æ—à–∏–±–∫–∞:\n\
                             –Ø –Ω–µ –º–æ–≥—É —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –ø—Ä–æ—à–ª–æ–º, –¥–µ–Ω—å –≤–≤–µ–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ') // –û—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ 
                else // –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ, —Ç–æ
                {
                    year = Number(splitDate[2]); // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –≥–æ–¥–∞
                    month = Number(splitDate[1]); // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –º–µ—Å—è—Ü–∞
                    day = Number(splitDate[0]); // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –¥–Ω—è
                }
            }
            textDate = `${day}.${month}.${year}`; // –ù—É–∂–Ω–æ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            if(!args[1]) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–≤–æ–¥ –≤—Ä–µ–º–µ–Ω–∏
                return await ctx.reply('ü§ñ –Ø –Ω–µ –≤–∞–Ω–≥–∞, —è –Ω–µ–∑–Ω–∞—é –≤–æ —Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –Ω–∞–ø–æ–º–Ω–∏—Ç—å\n–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑..')
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–≤–æ–¥ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –º–∏–Ω—É—Ç
            if(Number(args[1]) >= 0 && Number(args[1]) <= 23) // Number(–∞—Ä–≥—É–º–µ–Ω—Ç) -> –ø–µ—Ä–µ–≤–æ–¥ –≤ —á–∏—Å–ª–æ
            {
                hour = Number(args[1]); // –ü—Ä–∏—Å–≤–æ–µ–Ω–∏–µ —á–∞—Å–∞
                minute = 0; // –ü—Ä–∏—Å–≤–æ–µ–Ω–∏–µ –º–∏–Ω—É—Ç
            }
            else
            {
                const splitTime = args[1].split(':'); // –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ :
                const splitDate = user.Date.split('.');
                if (Number(splitTime[0]) < 0 || Number(splitTime[0]) > 23)
                    return await ctx.reply('ü§ñ –£–ø—Å.. –≤–∏–¥–∏–º–æ —Ç—ã –Ω–µ —Ç–∞–∫ –≤–≤—ë–ª —á–∞—Å—ã, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!') // –û—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏

                if (Number(splitTime[1]) < 0 || Number(splitTime[1]) > 60)
                    return await ctx.reply('ü§ñ –£–ø—Å.. –≤–∏–¥–∏–º–æ —Ç—ã –Ω–µ —Ç–∞–∫ –≤–≤—ë–ª –º–∏–Ω—É—Ç—ã, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!') // –û—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏

                if(Number(iYear) == Number(splitDate[2]) && Number(iMonth) == Number(splitDate[1]) && Number(iDay)== Number(splitDate[1]) && Number(iHour) > Number(splitTime[0])) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–µ–¥—à–µ–µ –≤—Ä–µ–º—è
                    return await ctx.reply('ü§ñ –•–º.. —É —Ç–µ–±—è —Ç—É—Ç –æ—à–∏–±–∫–∞:\n\
                                                –Ø –Ω–µ –º–æ–≥—É —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –ø—Ä–æ—à–ª–æ–º, —á–∞—Å –≤–≤–µ–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ') // –û—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ 
                else if(Number(iYear) == Number(splitDate[2]) && Number(iMonth) == Number(splitDate[1]) && Number(iDay) == Number(splitDate[1]) && Number(iHour) == Number(splitTime[0]) && iMinute > Number(splitTime[1])) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–µ–¥—à–µ–µ –≤—Ä–µ–º—è
                    return await ctx.reply('ü§ñ –•–º.. —É —Ç–µ–±—è —Ç—É—Ç –æ—à–∏–±–∫–∞:\n\
                                            –Ø –Ω–µ –º–æ–≥—É —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –ø—Ä–æ—à–ª–æ–º, –º–∏–Ω—É—Ç—ã –≤–≤–µ–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ') // –û—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ 
                else // –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ, —Ç–æ
                {
                    hour = Number(splitTime[0]); // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ —á–∞—Å–∞
                    minute = Number(splitTime[1]); // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –º–∏–Ω—É—Ç
                }
            }
            textTime = `${hour}:${minute}`; // –ù—É–∂–Ω–æ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            // –ü–æ–∏—Å–∫ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await User.findOneAndUpdate({ID: ctx.message.from_id},{ Flag: 3, Date: textDate, Time: textTime }).exec(); 
            await ctx.reply('ü§ñ –ò —Ç–∞–∫, –º–Ω–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ø–æ–≤—Ç–æ—Ä—è—Ç—å —ç—Ç–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ?\n–î–∞ –∏–ª–∏ –ù–µ—Ç?'); // –û—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        }
        else if(user.Flag == 3)
        {
            let iRepeat = 0, messageRepeat, stringHour, stringMinute;
            if(ctx.message.text.toLowerCase() == '–¥–∞') iRepeat = 1; // –ø–æ–≤—Ç–æ—Ä—è—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
            else if(ctx.message.text.toLowerCase() == '–Ω–µ—Ç') iRepeat = 0; // –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—Ç—å
            else return await ctx.reply('ü§ñ –•–º–º.. —ç—Ç–æ –Ω–µ –æ—Ç–≤–µ—Ç\n–ú–Ω–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å, –ø–æ–≤—Ç–æ—Ä—è—Ç—å —Ç–µ–±–µ –∏–ª–∏ –Ω–µ—Ç?\n–î–∞ –∏–ª–∏ –ù–µ—Ç?') // –í —Å–ª—É—á–∞–µ –ª–µ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            await RegisterReminder(user.Numbers + 1, ctx.message.from_id, user.Text, user.Date, user.Time, iRepeat); // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
            // –û–±–Ω—É–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞
            await User.findOneAndUpdate({ID: ctx.message.from_id},{ Flag: 0, Date: 'None', Time: 'None', Text: 'None', Numbers: user.Number + 1 }).exec(); 
            if (iRepeat == 1) messageRepeat = '–î–∞'; // –ü—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ —Å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ–º, —Å–æ–æ–±—â–µ–Ω–∏–µ = –¥–∞
            else messageRepeat = '–ù–µ—Ç'; // –ü—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è, —Å–æ–æ–±—â–µ–Ω–∏–µ = –Ω–µ—Ç
            const splitTime = user.Time.split(':'); // split —á–µ—Ä–µ–∑ :
            if (Number(splitTime[0]) < 10) // –î–ª—è –∫—Ä–∞—Å–æ—Ç—ã: –ï—Å–ª–∏ —á–∞—Å–æ–≤ –º–µ—à–Ω—å—à–µ 10
                stringHour = `0${Number(splitTime[0])}`
            else
                stringHour = `${Number(splitTime[0])}`

            if (Number(splitTime[1]) < 10) // –î–ª—è –∫—Ä–∞—Å–æ—Ç—ã: –ï—Å–ª–∏ –º–∏–Ω—É—Ç –º–µ—à–Ω—å—à–µ 10
                stringMinute = `0${Number(splitTime[1])}`
            else
                stringMinute = `${Number(splitTime[1])}`
            await ctx.reply(`ü§ñ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ #${user.Numbers + 1}, —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω–æ\n\
                    –î–∞—Ç–∞: ${user.Date}\n\
                    –í—Ä–µ–º—è: ${stringHour}:${stringMinute}\n\
                    –¢–µ–∫—Å—Ç: ${user.Text}\n\
                    –° –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ–º: ${messageRepeat}`)
        }
        else // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫
            await ctx.reply('ü§ñ –•–º.. —è –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª\n\
                            –í–≤–µ–¥–∏: "–ö–æ–º–∞–Ω–¥—ã", —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –º–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª!') // –û—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    }
});

async function SendReminderMessage()
{
    var date = new Date().toLocaleString("en-US", {timeZone: "Europe/Moscow"}); // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞—Ç—ã
    date = new Date(date); // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞—Ç—ã
    const iHour = date.getHours(); // –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞: –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è —á–∞—Å–∞
    const iMinute = date.getMinutes(); // –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞: –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è –º–∏–Ω—É—Ç
    const iMonth = date.getMonth() + 1; // –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞: –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –º–µ—Å—è—Ü–∞
    const iDay = date.getDate(); // –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞: –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è 
    const iYear = date.getFullYear(); // –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞: –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –≥–æ–¥–∞

    let stringTime = `${iHour}:${iMinute}`; // –í—Ä–µ–º—è –≤ —Å—Ç—Ä–æ–∫–µ
    let stringDate = `${iDay}.${iMonth}.${iYear}` // –î–∞—Ç–∞ –≤ —Å—Ç—Ä–æ–∫–µ

    // –¶–∏–∫–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    for(const reminder of await Reminder.find({Time: stringTime, Date: stringDate}).exec())
    {
        let messageRepeat = '';
        if (reminder.Repeat == 1) // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ
        {
            const args = reminder.Date.split('.'); // –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –¥–∞—Ç—ã —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É
            let oDay = Number(args[0]); // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –¥–Ω—è
            let oMonth = Number(args[1]); // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞
            let oYear = Number(args[2]); // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –≥–æ–¥–∞

            oDay++; // –ü—Ä–∏–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ –¥–Ω—é + 1
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–µ—Å—è—Ü
            if((oMonth == 1 || oMonth == 3 || oMonth == 5 || oMonth == 7 || oMonth == 8 || oMonth == 10 || oMonth == 12) && oDay > 31)
            {
                oMonth++; // –ü—Ä–∏–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞
                oDay = 1; // –°–µ—Ç –Ω–∞ –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å
                if(oMonth > 12) oMonth = 1; // –°–µ—Ç –Ω–∞ —è–Ω–≤–∞—Ä—å
            }
            else if(((oMonth== 4 || oMonth == 6 || oMonth == 9 || oMonth == 11)) && oDay > 30)
            {
                oMonth++; // –ü—Ä–∏–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞
                oDay = 1; // –°–µ—Ç –Ω–∞ –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å
            }
            else 
            {
                if(oYear % 4 == 0 && ( oYear % 100 != 0 || oYear % 400 == 0 )) // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∏—Å–æ–∫–æ—Å–Ω—ã–π –≥–æ–¥
                {
                        if (oDay > 29) // –ü—Ä–æ–≤–µ—Ä–∫–∞: –ë–æ–ª—å—à–µ –ª–∏ 29 –¥–Ω–µ–π, –µ—Å–ª–∏ –¥–∞, —Ç–æ:
                        {
                            oDay = 1; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è –º–µ—Å—è—Ü–∞
                            oMonth++; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞
                        }
                }
                else // –ï—Å–ª–∏ –Ω–µ –≤–∏—Å–æ–∫–æ—Å–Ω—ã–π –≥–æ–¥
                {
                    if (oDay > 28) // –ü—Ä–æ–≤–µ—Ä–∫–∞: –ë–æ–ª—å—à–µ –ª–∏ 28 –¥–Ω–µ–π, –µ—Å–ª–∏ –¥–∞, —Ç–æ:
                    {
                        oDay = 1; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è –º–µ—Å—è—Ü–∞
                        oMonth++; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞
                    }
                }
            }
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ
            await Reminder.findOneAndUpdate({UserID: reminder.UserID, ID: reminder.ID},{ Date: `${oDay}.${oMonth}.${oYear}`}).exec(); 
            messageRepeat = `–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω–æ –Ω–∞ ${oDay}.${oMonth}.${oYear}`;
        }
        else await Reminder.deleteOne({UserID: reminder.UserID, ID: reminder.ID}).exec() // —É–¥–∞–ª–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
        const data = await api('users.get', {user_ids: ctx.message.from_id,access_token: token}); // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —á–µ—Ä–µ–∑ –º–æ–¥—É–ª—å
        await bot.sendMessage(reminder.UserID, `[id${ctx.message.from_id}|${data.response[0].first_name}], –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ #${reminder.ID}\n${reminder.Text}\n\n${messageRepeat}`); // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    }
}

// ===============[–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞]==============
bot.startPolling(); 
// ===============[–ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è]==============
//setInterval(SendReminderMessage, 30000)
console.log(moment().zone("+03:00"));